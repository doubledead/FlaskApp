{"version":3,"sources":["templates.js","main.js","events.js","controllers.js","directives.js","item-service.js","services.js"],"names":["angular","module","run","$templateCache","put","$rootScope","controller","$scope","$http","$timeout","EventService","ItemService","params","carbon","formValid","rowId","stage","longStage","toggleEventObjView","getItems","then","response","data","removeItem","id","direction","status","console","log","reset","scope","claimItems","JSON","stringify","items_data","updateItems","addNewHostSubitem","itemId","quantity","item","i","length","newHostSubitemRow","row_id","user_id","subitems","push","updateItem","directive","restrict","templateUrl","hostId","link","element","attrs","subitemId","subitemsFlag","hostSubitemsFlag","$watch","quantity_claimed","subitem","addSubitemRow","subItemRow","factory","method","url","location","pathname","paramId","split"],"mappings":"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","file":"host.min.js","sourcesContent":["angular.module('templates', []).run(['$templateCache', function($templateCache) {$templateCache.put('events/event.html','<!-- Items -->\\n<div ng-repeat=\"item in event.items_data\">\\n  <item-row ng-if=\"item.active === true\" item=\"item\"></item-row>\\n</div>\\n<div class=\"row\">\\n  <div class=\"col-xs-12 col-sm-12 col-md-12\">&nbsp;</div>\\n</div>\\n<div class=\"row\">\\n  <div class=\"col-xs-12 col-sm-12 col-md-12\">\\n    <h4><strong>Removed Items</strong></h4>\\n  </div>\\n</div>\\n<div ng-repeat=\"item in event.items_data\">\\n  <item-row ng-if=\"item.active === false\" item=\"item\"></item-row>\\n</div>\\n<!-- End Items -->\\n');\n$templateCache.put('events/items/item.html','<div ng-class=\"{\\'item-removed\\': item.active === false}\">\\n  <div class=\"row\">\\n    <div class=\"col-xs-2 col-sm-2 col-md-3\"><strong>Name:</strong> {{ item.name }}</div>\\n    <div class=\"col-xs-2 col-sm-2 col-md-2\">Quantity: {{ item.quantity }}</div>\\n    <div class=\"col-xs-2 col-sm-2 col-md-2\">Claimed: {{ item.quantity_claimed }}</div>\\n    <div class=\"col-xs-2 col-sm-2 col-md-2\">\\n      <button type=\"button\" class=\"btn btn-danger btn-xs\" ng-click=\"$parent.removeItem(item.id)\">\\n        <span ng-if=\"item.active===true\">Remove Item</span>\\n        <span ng-if=\"item.active===false\">Reactivate Item</span>\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-12 col-md-12\">&nbsp;</div>\\n  </div>\\n  <div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-12 col-md-12\">&nbsp;</div>\\n  </div>\\n  <div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-12 col-md-12\"><strong>Claimed:</strong></div>\\n  </div>\\n  <!-- Subitems -->\\n  <div ng-repeat=\"subitem in item.subitems\">\\n    <subitem-row subitem=\"subitem\" host-id=\"hostId\"></subitem-row>\\n  </div>\\n  <!--End Subitems -->\\n  <div class=\"row\" ng-if=\"subitemsFlag\">\\n    <div class=\"col-sx-12 col-sm-12 col-md-12\">No items claimed.</div>\\n  </div>\\n  <div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-12 col-md-12\">&nbsp;</div>\\n  </div>\\n  <div class=\"row\" ng-if=\"hostSubitemsFlag\">\\n    <div class=\"col-sx-4 col-sm-4 col-md-4\">You\\'ve claimed none of this item.</div>\\n    <!--\\n    <div class=\"col-xs-2 col-sm-2 col-md-2\">\\n      <button type=\"button\" class=\"btn btn-primary btn-sm\" ng-click=\"addSubitemRow()\">\\n        Claim\\n      </button>\\n    </div>\\n    -->\\n  </div>\\n  <div class=\"row\" ng-if=\"hostSubitemsFlag\">\\n    <div class=\"col-xs-2 col-sm-2 col-md-1\">\\n      <div class=\"form-group\">\\n        <label for=\"{{\\'tb-subitem-quantity-\\' + subitem.id}}\">&nbsp;</label>\\n        <input type=\"text\"\\n               id=\"{{\\'tb-subitem-quantity-\\' + subitem.id}}\"\\n               class=\"form-control\"\\n               ng-model=\"quantity\">\\n      </div>\\n    </div>\\n    <div class=\"col-xs-2 col-sm-2 col-md-2\">\\n      <button type=\"button\" class=\"btn btn-primary btn-sm\" ng-click=\"$parent.$parent.addNewHostSubitem(item.id, quantity)\">\\n        Add\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\"row\">\\n    <hr >\\n  </div>\\n  <div class=\"row\">\\n    <div class=\"col-xs-12 col-sm-12 col-md-12\">&nbsp;</div>\\n  </div>\\n</div>\\n');\n$templateCache.put('events/subitems/subitem.html','<div class=\"row\" ng-if=\"subitem.user_id != hostId\">\\n  <!-- Need to add more user information here so Host can view user info. -->\\n  <div class=\"col-sx-2 col-sm-2 col-md-2\">User: {{ subitem.user_id }}</div>\\n  <div class=\"col-sx-2 col-sm-2 col-md-2\">Quantity: {{ subitem.quantity }}</div>\\n</div>\\n<div class=\"row\" ng-if=\"subitem.user_id === hostId\">\\n  <div class=\"col-sx-2 col-sm-2 col-md-2\">You\\'ve claimed:</div>\\n  <div class=\"col-xs-2 col-sm-2 col-md-1\">\\n    <div class=\"form-group\">\\n      <label for=\"{{\\'tb-subitem-quantity-\\' + subitem.id}}\">&nbsp;</label>\\n      <input type=\"text\"\\n             id=\"{{\\'tb-subitem-quantity-\\' + subitem.id}}\"\\n             class=\"form-control\"\\n             ng-model=\"subitem.quantity\">\\n    </div>\\n  </div>\\n  <div class=\"col-xs-2 col-sm-2 col-md-2\">\\n    <!--Had to add the second $parent because of the ng-if. -->\\n    <button type=\"button\" class=\"btn btn-primary btn-sm\" ng-click=\"$parent.$parent.updateItem()\">\\n      Update\\n    </button>\\n  </div>\\n</div>\\n<div class=\"row\">\\n  <div class=\"col-xs-12 col-sm-12 col-md-12\">&nbsp;</div>\\n</div>\\n');}]);","'use strict';\n\nangular.module('eventsApp', [\n\t'templates',\n\t'eventsApp.events',\n\t'ngAnimate'\n]);\n","'use strict';\n\nangular.module('eventsApp.events', [\n\t'events.controllers',\n  'events.event',\n\t'events.directives',\n  'events.services',\n  'events.item-service'\n])\n.run(['$rootScope', function ($rootScope) {\n\n}]);\n","'use strict';\n\nangular.module('events.controllers', [])\n.controller('eventsCtrl', [\n  '$scope',\n  '$http',\n  '$timeout',\n  'EventService',\n  'ItemService',\n  function (\n    $scope,\n    $http,\n    $timeout,\n    EventService,\n    ItemService\n  ){\n    $scope.params = [];\n    $scope.carbon = [];\n    $scope.formValid = false;\n    $scope.rowId = 0;\n    $scope.stage = '';\n    $scope.longStage = 0;\n    $scope.toggleEventObjView = false;\n\n    EventService\n      .getItems()\n      .then(function (response) {\n        $scope.params = response.data;\n        // $scope.carbon = response.data;\n      });\n\n    $scope.removeItem = function (id) {\n      $scope.direction = 1;\n      $scope.stage = \"loading\";\n\n      EventService\n        .removeItem(id)\n        .then(function (response) {\n          if (response.data && response.data.status === \"OK\") {\n            console.log(\"removeItem: OK!\");\n            $scope.reset();\n          } else if (response.data && response.data.status === \"Error\") {\n            $scope.direction = 1;\n            scope.stage = \"error\";\n            console.log(\"removeItem: Error!\");\n          }\n        });\n    };\n\n    $scope.claimItems = function () {\n      var items = JSON.stringify($scope.params.items_data);\n      $scope.direction = 1;\n      $scope.stage = 'loading';\n      $scope.longStage = 1;\n\n      EventService\n        .updateItems($scope.params.items_data)\n        .then(function (response) {\n          if (response.data && response.data.status === 'OK') {\n            console.log('updateitems: OK!');\n            $scope.reset();\n          } else if (response.data && response.data.status === 'Error') {\n            $scope.direction = 1;\n            $scope.stage = 'error';\n            console.log('removeItem: Error!');\n          }\n        });\n    };\n\n    /*\n    $scope.updateItem = function (item) {\n      ItemService\n        .updateItem(item)\n        .then(function (response) {\n          if (response.data && response.data.status === \"OK\") {\n            console.log(\"updateitem: OK!\");\n            $scope.reset();\n          } else if (response.data && response.data.status === \"Error\") {\n            $scope.direction = 1;\n            $scope.stage = \"error\";\n            console.log(\"removeItem: Error!\");\n          }\n        });\n    };\n    */\n\n    $scope.addNewHostSubitem = function (itemId, quantity) {\n      console.log('Testing!!');\n      var item;\n\n      for (var i = 0; i < $scope.params.items_data.length; i++) {\n        if ($scope.params.items_data[i].id = itemId) {\n          item = $scope.params.items_data[i];\n        }\n      }\n\n      var newHostSubitemRow = {\n        row_id: 0,\n        quantity: quantity,\n        user_id: 0\n      };\n\n      item.subitems = [];\n\n      item.subitems.push(newHostSubitemRow);\n\n      ItemService\n        .updateItem(item)\n        .then(function (response) {\n          if (response.data && response.data.status === 'OK') {\n            console.log('updateitem: OK!');\n          } else if (response.data && response.data.status === 'Error') {\n            console.log('removeItem: Error!');\n          }\n        });\n    };\n\n    function changeRoute() {\n      var returnRoute = location.origin + '/events/';\n      location.assign(location.href);\n    }\n\n    $scope.reset = function () {\n      // Clean up scope before destroying\n      $scope.params = {};\n      // $scope.carbon = {};\n      EventService\n        .getItems()\n        .then(function (response) {\n          $scope.params = response.data;\n          // $scope.carbon = response.data;\n        });\n      $scope.direction = 1;\n      $scope.stage = \"\";\n      $scope.longStage = 0;\n    };\n\n}]);\n","'use strict';\n\nangular.module('events.directives', [])\n.directive('itemRow', ['ItemService', function (ItemService) {\n  return {\n    restrict: 'E',\n    templateUrl: 'events/items/item.html',\n    scope: {\n      item: '=',\n      hostId: '='\n    },\n    link: function (scope, element, attrs) {\n      scope.subitemId = 0;\n      scope.subitemsFlag = false;\n      scope.hostSubitemsFlag = false;\n\n      /*\n      scope.$watch('item.quantity_claimed', function () {\n        if (scope.item.quantity_claimed === 0) {\n          scope.subitemId++;\n          var subitemRow = {\n            row_id: scope.subitemId,\n            quantity: 0,\n            user_id: 0\n          };\n          scope.item.subitems.push(subitemRow);\n        } else if (scope.item.subitems.length <= 0) {\n          scope.subitemId++;\n          var subitemRow = {\n            row_id: scope.subitemId,\n            quantity: 0,\n            user_id: 0\n          };\n\n          scope.item.subitems.push(subitemRow);\n        }\n      });\n      */\n\n      scope.$watch('item.quantity_claimed', function () {\n        if (scope.item.quantity_claimed === 0) {\n          if (!scope.subitemsFlag) {\n            scope.subitemsFlag = true;\n          }\n          if (!scope.hostSubitemsFlag) {\n            scope.hostSubitemsFlag = true;\n          } else {\n            scope.hostSubitemsFlag = false;\n          }\n        } else if (scope.item.subitems.length <= 0) {\n          if (!scope.subitemsFlag) {\n            scope.subitemsFlag = true;\n          }\n          if (!scope.hostSubitemsFlag) {\n            scope.hostSubitemsFlag = true;\n          } else {\n            scope.hostSubitemsFlag = false;\n          }\n        }\n      });\n\n      // This needs work.\n      scope.$watch('item.subitems', function () {\n        for (var i = 0; i < scope.item.subitems.length; i++) {\n          var subitem = scope.item.subitems[i];\n          if (subitem.user_id === scope.hostId) {\n\n          }\n          if (subitem.user_id != scope.hostId) {\n            if (!scope.hostSubitemsFlag) {\n              scope.hostSubitemsFlag = true;\n            }\n          } else {\n            scope.hostSubitemsFlag = false;\n          }\n        }\n\n        // if ((scope.hostSubitemsList.length <= 0)\n        //   && (!scope.hostSubitemsFlag)) {\n        //   scope.hostSubitemsFlag = true;\n        // }\n      });\n\n      scope.addSubitemRow = function () {\n        scope.subitemId++;\n\n        var subItemRow = {\n          row_id: scope.subitemId,\n          quantity: 0,\n          user_id: 0\n        };\n        scope.item.subitems.push(subItemRow);\n      };\n\n      scope.updateItem = function () {\n        ItemService\n          .updateItem(scope.item)\n          .then(function (response) {\n            if (response.data && response.data.status === 'OK') {\n              console.log('updateitem: OK!');\n            } else if (response.data && response.data.status === 'Error') {\n              console.log('removeItem: Error!');\n            }\n          });\n      };\n\n      /*\n      scope.addNewHostSubitem = function (quantity) {\n        var newHostSubitemRow = {\n          row_id: 0,\n          quantity: quantity,\n          user_id: 0\n        };\n\n        scope.item.subitems = [];\n\n        scope.item.subitems.push(newHostSubitemRow);\n\n        ItemService\n          .updateItem(scope.item)\n          .then(function (response) {\n            if (response.data && response.data.status === 'OK') {\n              console.log('updateitem: OK!');\n            } else if (response.data && response.data.status === 'Error') {\n              console.log('removeItem: Error!');\n            }\n          });\n      };\n      */\n    }\n  };\n}])\n.directive('subitemRow', function () {\n  return {\n    restrict: 'E',\n    templateUrl: 'events/subitems/subitem.html',\n    scope: {\n      subitem: '=',\n      hostId: '='\n    },\n    link: function (scope, element, attrs) {\n\n    }\n  };\n});\n","'use strict';\n\nangular.module('events.item-service', [])\n  .factory('ItemService', function($http){\n\n    return {\n      updateItem: function(item) {\n        var data = JSON.stringify(item);\n\n        return $http({\n          method: 'POST',\n          url: '/events/updatehostitem',\n          data: data\n        }).then(function successCallback(response) {\n          return response;\n        }, function errorCallback(response) {\n          console.log(response);\n        });\n      }\n    }\n  });\n\n","'use strict';\n\nangular.module('events.services', [])\n  .factory('EventService', function($http){\n\n      return {\n        getItems: function() {\n          var url = location.pathname;\n          // Split event ID out of URL\n          var paramId = url.split('/events/host/', 2)[1];\n\n          var data = {\n            paramId: paramId\n          };\n\n          return $http({\n            method: 'POST',\n            url: '/events/getitemshost',\n            data: JSON.stringify(data)\n          }).then(function successCallback(response) {\n            return response;\n          }, function errorCallback(response) {\n            console.log(response);\n          });\n        },\n        removeItem: function(itemId) {\n          var data = {\n            paramId: itemId\n          };\n\n          return $http({\n            method: 'POST',\n            url: '/events/removeitem',\n            data: JSON.stringify(data)\n          }).then(function successCallback(response) {\n            return response;\n          }, function errorCallback(response) {\n            console.log(response);\n          });\n        },\n        updateItems: function(items_data) {\n          var data = JSON.stringify(items_data);\n\n          return $http({\n            method: 'POST',\n            url: '/events/updateitems',\n            data: data\n          }).then(function successCallback(response) {\n            return response;\n          }, function errorCallback(response) {\n            console.log(response);\n          });\n        }\n      }\n    });\n"]}