angular.module("templates",[]).run(["$templateCache",function(t){t.put("events/event.html",'<!-- Items -->\n<div ng-repeat="item in event.items_data">\n  <item-row item="item"></item-row>\n</div>\n<!-- End Items -->\n<!--\n<div class="row">\n  <div class="col-xs-2 col-sm-2 col-md-2">\n    <button type="button" class="btn btn-primary btn-sm" ng-click="claimItems()">Claim Items</button>\n  </div>\n  <div class="col-xs-2 col-sm-5 col-md-5">&nbsp;</div>\n</div>\n-->\n'),t.put("events/row.html",'<div class="form-group">\n  <label for="{{\'tb-quantity-claimed\' + row.row_id}}">&nbsp;</label>\n  <input type="text" id="{{\'tb-quantity-claimed\' + row.row_id}}" class="form-control" ng-model="row.quantity_claimed">\n</div>\n'),t.put("form/row.html",'<div class="form-group">\n  <label for="tb-title">Title:</label>\n  <input type="text" class="form-control" id="tb-title" ng-model="params.title">\n</div>\n<div class="form-group">\n  <label for="tb-post-date">Post Date:</label>\n  <input type="text" class="form-control" id="tb-post-date" ng-model="params.post_date">\n</div>\n<div class="form-group">\n  <label for="tb-body">Body:</label>\n  <input type="text" class="form-control" id="tb-body" ng-model="params.body">\n</div>\n'),t.put("events/items/item.html",'<div class="row">\n  <div class="col-xs-2 col-sm-2 col-md-3"><strong>Name:</strong> {{ item.name }}</div>\n  <div class="col-xs-2 col-sm-2 col-md-2">Quantity: {{ item.quantity }}</div>\n  <div class="col-xs-2 col-sm-2 col-md-2">Claimed: {{ item.quantity_claimed }}</div>\n</div>\n<div class="row">\n  <div class="col-xs-12 col-sm-12 col-md-12">&nbsp;</div>\n</div>\n<div class="row">\n  <div class="col-xs-12 col-sm-12 col-md-12">&nbsp;</div>\n</div>\n<div class="row">\n  <div class="col-xs-12 col-sm-12 col-md-12"><strong>You\'ve Claimed:</strong></div>\n</div>\n<!-- Subitems -->\n<div ng-repeat="subitem in item.subitems">\n  <subitem-row subitem="subitem"></subitem-row>\n</div>\n<!--End Subitems -->\n<div class="row">\n  <hr >\n</div>\n<div class="row">\n  <div class="col-xs-12 col-sm-12 col-md-12">&nbsp;</div>\n</div>\n'),t.put("events/subitems/subitem.html",'<div class="row">\n  <!--<div class="col-sx-2 col-sm-2 col-md-2">User: {{ subitem.user_id }}</div>-->\n  <div class="col-xs-2 col-sm-2 col-md-1">\n    <div class="form-group">\n      <label for="{{\'tb-subitem-quantity-\' + subitem.id}}">&nbsp;</label>\n      <input type="text"\n             id="{{\'tb-subitem-quantity-\' + subitem.id}}"\n             class="form-control"\n             ng-model="subitem.quantity">\n    </div>\n  </div>\n</div>\n')}]),angular.module("eventsApp",["templates","eventsApp.events","ngAnimate"]),angular.module("eventsApp.events",["events.controllers","events.event","events.directives","events.services"]).run(["$rootScope",function(t){}]),angular.module("events.controllers",[]).controller("eventsCtrl",["$scope","$http","$timeout","EventService",function(t,e,n,s){t.params=[],t.carbon=[],t.formValid=!1,t.rowId=0,t.stage=0,t.toggleEventObjView=!1,s.getItems().then(function(e){t.params=e.data}),t.claimItem=function(n){for(var s,i=0;i<t.params.items_data.length;i++)t.params.items_data[i].id===n&&(s=t.params.items_data[i]);e({method:"POST",url:"/events/updateitem",data:JSON.stringify(s)}).then(function(t){t.data&&"OK"===t.data.status?console.log("Success."):t.data&&"code:3"===t.data.status&&console.log("Quantity being claimed exceeds max. Value will remain unchanged.")},function(t){console.log(t)})},t.claimItems=function(){s.updateItems(t.params.items_data).then(function(e){e.data&&"OK"===e.data.status?(console.log("updateitems: OK!"),t.reset()):e.data&&"Error"===e.data.status&&(t.direction=1,t.stage="error",console.log("removeItem: Error!"))})},t.reset=function(){t.params={},s.getItems().then(function(e){t.params=e.data})}}]),angular.module("events.event",[]).directive("eventRow",["$http",function(t){return{restrict:"E",templateUrl:"events/event.html",scope:{event:"="},link:function(e,n,s){e.subitemId=0,e.$watch("event",function(){}),e.claimItems=function(){var n=JSON.stringify(e.event.items_data);t({method:"POST",url:"/events/updateitems",data:n}).then(function(t){t.data&&"OK"===t.data.status?console.log("Success."):t.data&&"code:3"===t.data.status&&console.log("Quantity being claimed exceeds max. Value will remain unchanged.")},function(t){t.data&&"Error"===t.data.status&&console.log("Error."),console.log(t)})}}}}]),angular.module("events.directives",[]).directive("itemRow",function(){return{restrict:"E",templateUrl:"events/items/item.html",scope:{item:"="},link:function(t,e,n){t.subitemId=0,t.$watch("item.quantity_claimed",function(){0===t.item.quantity_claimed?(t.addSubitemRow=function(){t.subitemId++;var e={row_id:t.subitemId,quantity:0,user_id:0};t.item.subitems.push(e)},t.addSubitemRow()):t.item.subitems.length<=0&&(t.addSubitemRow=function(){t.subitemId++;var e={row_id:t.subitemId,quantity:0,user_id:0};t.item.subitems.push(e)},t.addSubitemRow())})}}}).directive("subitemRow",function(){return{restrict:"E",templateUrl:"events/subitems/subitem.html",scope:{subitem:"="},link:function(t,e,n){}}}),angular.module("events.services",[]).factory("EventService",function(t){return{getItems:function(){var e=location.pathname,n=e.split("/events/",2)[1],s={paramId:n};return t({method:"POST",url:"/events/getitems",data:JSON.stringify(s)}).then(function(t){return t},function(t){console.log(t)})},updateItems:function(e){var n=JSON.stringify(e);return t({method:"POST",url:"/events/updateitems",data:n}).then(function(t){return t},function(t){console.log(t)})}}});
//# sourceMappingURL=events.min.js.map
