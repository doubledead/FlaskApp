{"version":3,"sources":["templates.js","main.js","events.js","controllers.js","event.js","directives.js","services.js"],"names":["angular","module","run","$templateCache","put","$rootScope","controller","$scope","$http","$timeout","EventService","params","carbon","formValid","rowId","stage","toggleEventObjView","getItems","then","response","data","claimItem","id","item","i","items_data","length","method","url","JSON","stringify","status","console","log","claimItems","updateItems","reset","direction","directive","restrict","templateUrl","scope","event","link","element","attrs","subitemId","$watch","items","quantity_claimed","addSubitemRow","subitemRow","row_id","quantity","user_id","subitems","push","subitem","factory","location","pathname","paramId","split"],"mappings":"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","file":"events.min.js","sourcesContent":["angular.module('templates', []).run(['$templateCache', function($templateCache) {$templateCache.put('events/event.html','<!-- Items -->\\n<div ng-repeat=\"item in event.items_data\">\\n  <item-row item=\"item\"></item-row>\\n</div>\\n<!-- End Items -->\\n<!--\\n<div class=\"row\">\\n  <div class=\"col-xs-2 col-sm-2 col-md-2\">\\n    <button type=\"button\" class=\"btn btn-primary btn-sm\" ng-click=\"claimItems()\">Claim Items</button>\\n  </div>\\n  <div class=\"col-xs-2 col-sm-5 col-md-5\">&nbsp;</div>\\n</div>\\n-->\\n');\n$templateCache.put('events/row.html','<div class=\"form-group\">\\n  <label for=\"{{\\'tb-quantity-claimed\\' + row.row_id}}\">&nbsp;</label>\\n  <input type=\"text\" id=\"{{\\'tb-quantity-claimed\\' + row.row_id}}\" class=\"form-control\" ng-model=\"row.quantity_claimed\">\\n</div>\\n');\n$templateCache.put('form/row.html','<div class=\"form-group\">\\n  <label for=\"tb-title\">Title:</label>\\n  <input type=\"text\" class=\"form-control\" id=\"tb-title\" ng-model=\"params.title\">\\n</div>\\n<div class=\"form-group\">\\n  <label for=\"tb-post-date\">Post Date:</label>\\n  <input type=\"text\" class=\"form-control\" id=\"tb-post-date\" ng-model=\"params.post_date\">\\n</div>\\n<div class=\"form-group\">\\n  <label for=\"tb-body\">Body:</label>\\n  <input type=\"text\" class=\"form-control\" id=\"tb-body\" ng-model=\"params.body\">\\n</div>\\n');\n$templateCache.put('events/items/item.html','<div class=\"row\">\\n  <div class=\"col-xs-2 col-sm-2 col-md-3\"><strong>Name:</strong> {{ item.name }}</div>\\n  <div class=\"col-xs-2 col-sm-2 col-md-2\">Quantity: {{ item.quantity }}</div>\\n  <div class=\"col-xs-2 col-sm-2 col-md-2\">Claimed: {{ item.quantity_claimed }}</div>\\n</div>\\n<div class=\"row\">\\n  <div class=\"col-xs-12 col-sm-12 col-md-12\">&nbsp;</div>\\n</div>\\n<div class=\"row\">\\n  <div class=\"col-xs-12 col-sm-12 col-md-12\">&nbsp;</div>\\n</div>\\n<div class=\"row\">\\n  <div class=\"col-xs-12 col-sm-12 col-md-12\"><strong>You\\'ve Claimed:</strong></div>\\n</div>\\n<!-- Subitems -->\\n<div ng-repeat=\"subitem in item.subitems\">\\n  <subitem-row subitem=\"subitem\"></subitem-row>\\n</div>\\n<!--End Subitems -->\\n<div class=\"row\">\\n  <hr >\\n</div>\\n<div class=\"row\">\\n  <div class=\"col-xs-12 col-sm-12 col-md-12\">&nbsp;</div>\\n</div>\\n');\n$templateCache.put('events/subitems/subitem.html','<div class=\"row\">\\n  <!--<div class=\"col-sx-2 col-sm-2 col-md-2\">User: {{ subitem.user_id }}</div>-->\\n  <div class=\"col-xs-2 col-sm-2 col-md-1\">\\n    <div class=\"form-group\">\\n      <label for=\"{{\\'tb-subitem-quantity-\\' + subitem.id}}\">&nbsp;</label>\\n      <input type=\"text\"\\n             id=\"{{\\'tb-subitem-quantity-\\' + subitem.id}}\"\\n             class=\"form-control\"\\n             ng-model=\"subitem.quantity\">\\n    </div>\\n  </div>\\n</div>\\n');}]);","'use strict';\n\nangular.module('eventsApp', [\n\t'templates',\n\t'eventsApp.events',\n\t'ngAnimate'\n]);\n","'use strict';\n\nangular.module('eventsApp.events', [\n\t'events.controllers',\n  'events.event',\n\t'events.directives',\n  'events.services'\n])\n.run(['$rootScope', function ($rootScope) {\n\n}]);\n","angular.module('events.controllers', [])\n.controller('eventsCtrl', [\n  '$scope',\n  '$http',\n  '$timeout',\n  'EventService',\n  function (\n    $scope,\n    $http,\n    $timeout,\n    EventService\n  ){\n    $scope.params = [];\n    $scope.carbon = [];\n    $scope.formValid = false;\n    $scope.rowId = 0;\n    $scope.stage = 0;\n    $scope.toggleEventObjView = false;\n\n    // This method of calling the service initializes the response\n    // as an object in the controller on load.\n    // $scope.params = EventService.getEvent();\n    // console.log($scope.params);\n\n    // This method initializes the object after everything else loads\n    // and makes the object available to routes/views. ng-repeat, etc.\n    EventService\n      .getItems()\n      .then(function (response) {\n        $scope.params = response.data;\n        // $scope.carbon = response.data;\n      });\n\n\n    $scope.claimItem = function (id) {\n      var item;\n\n      // Iterate through params.event_data to find Item object\n      for (var i = 0; i < $scope.params.items_data.length; i++) {\n        if ($scope.params.items_data[i].id === id) {\n          item = $scope.params.items_data[i];\n        }\n      }\n\n      $http({\n        method: 'POST',\n        url: '/events/updateitem',\n        data: JSON.stringify(item)\n      }).then(function successCallback(response) {\n        if (response.data && response.data.status === 'OK') {\n          console.log('Success.')\n        } else if (response.data && response.data.status === 'code:3') {\n          console.log('Quantity being claimed exceeds max. Value will remain unchanged.')\n        }\n        // console.log(response)\n      }, function errorCallback(response) {\n        console.log(response);\n      });\n    };\n\n    $scope.claimItems = function () {\n      // Validation\n      // Maybe make a copy and validate on client side before\n      // even hitting the DB to save a service call.\n\n      // Maybe store copy in local storage and dump it on\n      // change/submit.\n\n      EventService\n        .updateItems($scope.params.items_data)\n        .then(function (response) {\n          if (response.data && response.data.status === \"OK\") {\n            console.log(\"updateitems: OK!\");\n            $scope.reset();\n          } else if (response.data && response.data.status === \"Error\") {\n            $scope.direction = 1;\n            $scope.stage = \"error\";\n            console.log(\"removeItem: Error!\");\n          }\n        });\n    };\n\n    function changeRoute() {\n      var returnRoute = location.origin + '/events/';\n      location.assign(location.href);\n    }\n\n    $scope.reset = function () {\n      // Clean up scope before destroying\n      $scope.params = {};\n      // $scope.carbon = {};\n      EventService\n        .getItems()\n        .then(function (response) {\n          $scope.params = response.data;\n          // $scope.carbon = response.data;\n        });\n    }\n\n}]);\n","angular.module('events.event', [])\n  .directive('eventRow', ['$http', function ($http) {\n    return {\n      restrict: 'E',\n      templateUrl: 'events/event.html',\n      scope: {\n        event: '='\n      },\n      link: function (scope, element, attrs) {\n        scope.subitemId = 0;\n\n        scope.$watch('event', function () {\n\n        });\n\n        scope.claimItems = function () {\n          var items = JSON.stringify(scope.event.items_data);\n\n          $http({\n            method: 'POST',\n            url: '/events/updateitems',\n            data: items\n          }).then(function successCallback(response) {\n            if (response.data && response.data.status === 'OK') {\n              console.log('Success.')\n              // reset();\n            } else if (response.data && response.data.status === 'code:3') {\n              console.log('Quantity being claimed exceeds max. Value will remain unchanged.')\n            }\n            // console.log(response)\n          }, function errorCallback(response) {\n            if (response.data && response.data.status === 'Error') {\n              console.log('Error.')\n              // reset();\n            }\n            console.log(response);\n          });\n        };\n\n\n      }\n    };\n  }]);\n","angular.module('events.directives', [])\n.directive('itemRow', function () {\n  return {\n    restrict: 'E',\n    templateUrl: 'events/items/item.html',\n    scope: {\n      item: '='\n    },\n    link: function (scope, element, attrs) {\n      scope.subitemId = 0;\n\n      // Insert blank Subitem row as placeholder if conditions\n      scope.$watch('item.quantity_claimed', function () {\n        if (scope.item.quantity_claimed === 0) {\n          // console.log(\"Test\");\n          // Do some logic here to add and subtract\n          // the quantity_claimed from something like\n          // called remaining. Watch for changes in the\n          // input and add and subtract difference accordingly.\n\n          scope.addSubitemRow = function () {\n            scope.subitemId++;\n\n            var subitemRow = {\n              row_id: scope.subitemId,\n              quantity: 0,\n              user_id: 0\n            };\n\n            scope.item.subitems.push(subitemRow);\n          };\n          scope.addSubitemRow();\n        } else if (scope.item.subitems.length <= 0) {\n          scope.addSubitemRow = function () {\n            scope.subitemId++;\n\n            var subitemRow = {\n              row_id: scope.subitemId,\n              quantity: 0,\n              user_id: 0\n            };\n\n            scope.item.subitems.push(subitemRow);\n          };\n          scope.addSubitemRow();\n        }\n      });\n\n\n    }\n  };\n})\n.directive('subitemRow', function () {\n  return {\n    restrict: 'E',\n    templateUrl: 'events/subitems/subitem.html',\n    scope: {\n      subitem: '='\n    },\n    link: function (scope, element, attrs) {\n\n    }\n  };\n});\n","angular.module('events.services', [])\n  .factory('EventService', function($http){\n\n      return {\n        getItems: function() {\n          var url = location.pathname;\n          // Split event ID out of URL\n          var paramId = url.split('/events/', 2)[1];\n\n          var data = {\n            paramId: paramId\n          };\n\n          return $http({\n            method: 'POST',\n            url: '/events/getitems',\n            data: JSON.stringify(data)\n          }).then(function successCallback(response) {\n            return response;\n          }, function errorCallback(response) {\n            console.log(response);\n          });\n        },\n        updateItems: function(items_data) {\n          var data = JSON.stringify(items_data);\n\n          return $http({\n            method: 'POST',\n            url: '/events/updateitems',\n            data: data\n          }).then(function successCallback(response) {\n            return response;\n          }, function errorCallback(response) {\n            console.log(response);\n          });\n        }\n      }\n    });\n"]}